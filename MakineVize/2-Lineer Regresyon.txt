#basit lineer modeli oluşturmak
from sklearn.linear_model import LinearRegression #kütüphaneyi import ettik
regressor = LinearRegression()
regressor.fit(x_train, y_train)

#tahmin etmek
y_pred = regressor.predict(x_test)

#başarı oranı
from sklearn.metrics import r2_score
Rkare= r2_score(y_test,y_pred)

############################################

#çoklu linear model oluşturmak
#öznitelik ölçkelmee
#özellik ölçekleme
from sklearn.preprocessing import MinMaxScaler
sc_x = MinMaxScaler()
x_train = sc_x.fit_transform(x_train)
x_test = sc_x.fit_transform(x_test)
sc_y = MinMaxScaler()
y_train = sc_y.fit_transform(y_train)
y_test = sc_y.fit_transform(y_test)

#eğitim verilerinin modellenmesi
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(x_train,y_train)

#tahmin
y_pred = regressor.predict(x_test)

#başarı hesaplama
from sklearn.metrics import r2_score
r2_score(y_test, y_pred)

#################################################

#polinomal
#modelin basit regresyonla eğitilmesi
from sklearn.linear_model import LinearRegression
lin_reg= LinearRegression()
lin_reg.fit(x,y)

#polinomla eğitilmesi
from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree=3)
x_poly = poly_reg.fit_transform(x)
poly_reg.fit(x_poly,x)
lin_reg_2 = LinearRegression() #linear
lin_reg_2.fit(x_poly,y) #polinom

#verilerin basitle testi
L = lin_reg.predict(x)

#verilerin polinomla testi
P= lin_reg_2.predict(x_poly)